{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/BPMContainer.jsx\";\nimport React from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\nimport \"../App\";\nexport default class BPMContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      interval: 200,\n      increment: 1,\n      stop: true\n    };\n\n    this.increaseBpm = timer => {\n      this.context.setBpm(this.context.bpm + increment);\n    };\n  }\n\n  render() {\n    const bpmTimeout = setTimeout(() => {\n      this.increaseBpm(this.state.interval, this.state.increment);\n    }, this.state.interval);\n    return React.createElement(\"div\", {\n      className: \"bpm-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"bpm-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"BPM\"), React.createElement(\"div\", {\n      id: \"bpm-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.context.bpm)), React.createElement(\"div\", {\n      id: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"arrow\",\n      onMouseDown: () => this.increaseBpm(bpmTimeout),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"\\u25B2\"), React.createElement(\"p\", {\n      className: \"arrow\",\n      onClick: () => this.context.setBpm(this.context.bpm - 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u25BC\")));\n  }\n\n}\nBPMContainer.contextType = GridContext;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/BPMContainer.jsx"],"names":["React","GridContext","BPMContainer","Component","state","interval","increment","stop","increaseBpm","timer","context","setBpm","bpm","render","bpmTimeout","setTimeout","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,QAAP;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAGxDC,KAHwD,GAGhD;AACNC,MAAAA,QAAQ,EAAE,GADJ;AAENC,MAAAA,SAAS,EAAE,CAFL;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAHgD;;AAAA,SASxDC,WATwD,GAS1CC,KAAK,IAAI;AACrB,WAAKC,OAAL,CAAaC,MAAb,CAAoB,KAAKD,OAAL,CAAaE,GAAb,GAAmBN,SAAvC;AACD,KAXuD;AAAA;;AAaxDO,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAGC,UAAU,CAAC,MAAM;AAClC,WAAKP,WAAL,CAAiB,KAAKJ,KAAL,CAAWC,QAA5B,EAAsC,KAAKD,KAAL,CAAWE,SAAjD;AACD,KAF4B,EAE1B,KAAKF,KAAL,CAAWC,QAFe,CAA7B;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKK,OAAL,CAAaE,GAAjB,CADF,CAFF,EAKE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAqB,MAAA,WAAW,EAAE,MAAM,KAAKJ,WAAL,CAAiBM,UAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKJ,OAAL,CAAaC,MAAb,CAAoB,KAAKD,OAAL,CAAaE,GAAb,GAAmB,CAAvC,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CALF,CADF;AAmBD;;AArCuD;AAArCV,Y,CACZc,W,GAAcf,W","sourcesContent":["import React from \"react\";\n\nimport { GridContext } from \"../contexts/GridContext\";\nimport \"../App\";\n\nexport default class BPMContainer extends React.Component {\n  static contextType = GridContext;\n\n  state = {\n    interval: 200,\n    increment: 1,\n    stop: true\n  };\n\n  increaseBpm = timer => {\n    this.context.setBpm(this.context.bpm + increment);\n  };\n\n  render() {\n    const bpmTimeout = setTimeout(() => {\n      this.increaseBpm(this.state.interval, this.state.increment);\n    }, this.state.interval);\n\n    return (\n      <div className=\"bpm-container\">\n        <p id=\"bpm-desc\">BPM</p>\n        <div id=\"bpm-text\">\n          <p>{this.context.bpm}</p>\n        </div>\n        <div id=\"arrows\">\n          <p className=\"arrow\" onMouseDown={() => this.increaseBpm(bpmTimeout)}>\n            ▲\n          </p>\n          <p\n            className=\"arrow\"\n            onClick={() => this.context.setBpm(this.context.bpm - 2)}\n          >\n            ▼\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}