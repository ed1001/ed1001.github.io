{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx\";\nimport React, { Component } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\nimport Note from \"./Note\";\nimport \"../App\";\n\nclass GridLine extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.instrPlay = instrument => {\n      this.context.playNote(instrument);\n      console.log(this);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `instr-name`,\n      id: this.props.instrument,\n      onClick: () => this.instrPlay(this.props.instrument),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.context.instrumentLabels[this.props.instrument]), React.createElement(\"div\", {\n      className: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.context.instruments[this.props.instrument].map((note, index) => React.createElement(Note, {\n      class: `note ${note && index === this.context.currentDivision ? \"note-playing\" : note ? \"note-active\" : \"\"}`,\n      note: index,\n      instrument: this.props.instrument,\n      setGrid: this.context.setGrid,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nGridLine.contextType = GridContext;\nexport default GridLine;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx"],"names":["React","Component","GridContext","Note","GridLine","instrPlay","instrument","context","playNote","console","log","render","props","instrumentLabels","instruments","map","note","index","currentDivision","setGrid","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,QAAP;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAG/BI,SAH+B,GAGnBC,UAAU,IAAI;AACxB,WAAKC,OAAL,CAAaC,QAAb,CAAsBF,UAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAN8B;AAAA;;AAQ/BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAG,YADd;AAEE,MAAA,EAAE,EAAE,KAAKC,KAAL,CAAWN,UAFjB;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKD,SAAL,CAAe,KAAKO,KAAL,CAAWN,UAA1B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKC,OAAL,CAAaM,gBAAb,CAA8B,KAAKD,KAAL,CAAWN,UAAzC,CALH,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,OAAL,CAAaO,WAAb,CAAyB,KAAKF,KAAL,CAAWN,UAApC,EAAgDS,GAAhD,CACC,CAACC,IAAD,EAAOC,KAAP,KACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAG,QACND,IAAI,IAAIC,KAAK,KAAK,KAAKV,OAAL,CAAaW,eAA/B,GACI,cADJ,GAEIF,IAAI,GACJ,aADI,GAEJ,EACL,EAPH;AAQE,MAAA,IAAI,EAAEC,KARR;AASE,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWN,UATzB;AAUE,MAAA,OAAO,EAAE,KAAKC,OAAL,CAAaY,OAVxB;AAWE,MAAA,GAAG,EAAEF,KAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADH,CARF,CADF;AA8BD;;AAvC8B;;AAA3Bb,Q,CACGgB,W,GAAclB,W;AAyCvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\n\nimport Note from \"./Note\";\n\nimport \"../App\";\n\nclass GridLine extends Component {\n  static contextType = GridContext;\n\n  instrPlay = instrument => {\n    this.context.playNote(instrument);\n    console.log(this);\n  };\n\n  render() {\n    return (\n      <div className=\"grid-line\">\n        <div\n          className={`instr-name`}\n          id={this.props.instrument}\n          onClick={() => this.instrPlay(this.props.instrument)}\n        >\n          {this.context.instrumentLabels[this.props.instrument]}\n        </div>\n        <div className=\"notes\">\n          {this.context.instruments[this.props.instrument].map(\n            (note, index) => (\n              <Note\n                class={`note ${\n                  note && index === this.context.currentDivision\n                    ? \"note-playing\"\n                    : note\n                    ? \"note-active\"\n                    : \"\"\n                }`}\n                note={index}\n                instrument={this.props.instrument}\n                setGrid={this.context.setGrid}\n                key={index}\n              />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GridLine;\n"]},"metadata":{},"sourceType":"module"}