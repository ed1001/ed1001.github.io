{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/Box.jsx\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport GridContainer from \"./GridContainer\";\nimport TransportContainer from \"./TransportContainer\";\nimport BPMContainer from \"./BPMContainer\";\nimport A1 from \"../sounds/HiHatClosed_VintageIndie.wav\";\nimport A2 from \"../sounds/Snare_VintageIndie.wav\";\nimport A3 from \"../sounds/Kick_VintageIndie.wav\";\nimport \"../App\";\nexport default class Box extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setGrid = (instrument, index, set) => {\n      const newState = this.state;\n      newState[instrument][index] = set;\n      this.setState(newState);\n    };\n\n    this.componentDidMount = drumKit => {\n      this.sequence = new Tone.Sequence((time, index) => {\n        for (let instrument of this.instruments) {\n          if (this.state[instrument][index]) {\n            this.drumKit.triggerAttack(instrument);\n          }\n        }\n      }, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], \"16n\").start(0);\n    };\n\n    this.state = {\n      bpm: 120,\n      A1: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true],\n      A2: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      A3: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n    };\n    this.drumKit = new Tone.Sampler({\n      A1,\n      A2,\n      A3\n    }, {}).toMaster();\n    this.sequence = {};\n    this.instruments = [\"A1\", \"A2\", \"A3\"];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TransportContainer, {\n      transport: Tone.Transport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(BPMContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(GridContainer, {\n      setGrid: this.setGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/Box.jsx"],"names":["React","Tone","GridContainer","TransportContainer","BPMContainer","A1","A2","A3","Box","Component","constructor","props","setGrid","instrument","index","set","newState","state","setState","componentDidMount","drumKit","sequence","Sequence","time","instruments","triggerAttack","start","bpm","Sampler","toMaster","render","Transport"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\n\nimport GridContainer from \"./GridContainer\";\nimport TransportContainer from \"./TransportContainer\";\nimport BPMContainer from \"./BPMContainer\";\n\nimport A1 from \"../sounds/HiHatClosed_VintageIndie.wav\";\nimport A2 from \"../sounds/Snare_VintageIndie.wav\";\nimport A3 from \"../sounds/Kick_VintageIndie.wav\";\n\nimport \"../App\";\n\nexport default class Box extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bpm: 120,\n      A1: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true],\n      A2: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      A3: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n    };\n    this.drumKit = new Tone.Sampler({\n      A1, A2, A3\n      }, {}).toMaster();\n      this.sequence = {};\n      this.instruments = [\"A1\", \"A2\", \"A3\"];\n  }\n\n  setGrid = (instrument, index, set) => {\n    const newState = this.state;\n    newState[instrument][index] = set;\n    this.setState(newState)\n  }\n\n  componentDidMount = (drumKit) => {\n    this.sequence = new Tone.Sequence(\n    (time, index) => {\n      for(let instrument of this.instruments){\n        if (this.state[instrument][index]) {\n          this.drumKit.triggerAttack(instrument);\n        }\n      }\n    },\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    \"16n\"\n    ).start(0);\n  }\n\n  render(){\n    return (\n      <div className=\"box\">\n        <TransportContainer transport={Tone.Transport} />\n        <BPMContainer />\n        <GridContainer setGrid={this.setGrid}/>\n      </div>\n    );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}