{"ast":null,"code":"import _objectSpread from \"/Users/Ed/code/ed1001/react-drums/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/contexts/GridContext.js\";\nimport React, { Component, createContext } from \"react\";\nimport Tone from \"tone\";\nimport A1 from \"../sounds/RideBell_VintageIndie.wav\";\nimport A2 from \"../sounds/Ride_VintageIndie.wav\";\nimport A3 from \"../sounds/HiHatOpen_VintageIndie.wav\";\nimport A4 from \"../sounds/HiHatClosed_VintageIndie.wav\";\nimport A5 from \"../sounds/Snare_VintageIndie.wav\";\nimport A6 from \"../sounds/XStick_VintageIndie.wav\";\nimport A7 from \"../sounds/Tom_VintageIndie.wav\";\nimport A8 from \"../sounds/Kick_VintageIndie.wav\";\nexport const GridContext = createContext();\n\nclass GridContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      drumKit: new Tone.Sampler({\n        A1,\n        A2,\n        A3,\n        A4,\n        A5,\n        A6,\n        A7,\n        A8\n      }, {}).toMaster(),\n      sequence: {},\n      instruments: {\n        A1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        A2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        A3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],\n        A4: [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0],\n        A5: [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n        A6: [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0],\n        A7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        A8: [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]\n      },\n      instrumentLabels: {\n        A1: \"Ride bell\",\n        A2: \"Ride\",\n        A3: \"Hihat Open\",\n        A4: \"Hihat Closed\",\n        A5: \"Snare\",\n        A6: \"Rim Click\",\n        A7: \"Tom\",\n        A8: \"Kick\"\n      },\n      bpm: 100,\n      currentDivision: -1,\n      mouseDown: false\n    };\n\n    this.componentDidMount = () => {\n      window.addEventListener(\"mousedown\", () => {\n        this.setState({\n          mouseDown: true\n        });\n      });\n      this.sequence = new Tone.Sequence((_, index) => {\n        for (let instrument of Object.keys(this.state.instrumentLabels)) {\n          if (this.state.instruments[instrument][index]) {\n            this.playNote(instrument);\n          }\n        }\n\n        this.setDivision();\n      }, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], \"16n\").start(0);\n    };\n\n    this.playNote = instrument => {\n      this.state.drumKit.triggerAttack(instrument);\n      if (instrument === \"A4\") this.state.drumKit.triggerRelease(\"A3\");\n    };\n\n    this.setGrid = (note, instrument) => {\n      const newState = this.state;\n      newState.instruments[instrument][note] = !this.state.instruments[instrument][note];\n      this.setState({\n        newState\n      });\n      this.playNote(instrument);\n    };\n\n    this.setBpm = newBpm => {\n      const newState = this.state;\n      newState.bpm = newBpm;\n      this.setState({\n        newState\n      });\n      Tone.Transport.bpm.value = newBpm;\n    };\n\n    this.setDivision = (num = this.state.currentDivision) => {\n      this.setState({\n        currentDivision: (num + 1) % 16\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(GridContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        setGrid: this.setGrid,\n        setBpm: this.setBpm,\n        setDivision: this.setDivision,\n        playNote: this.playNote\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default GridContextProvider;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/contexts/GridContext.js"],"names":["React","Component","createContext","Tone","A1","A2","A3","A4","A5","A6","A7","A8","GridContext","GridContextProvider","state","drumKit","Sampler","toMaster","sequence","instruments","instrumentLabels","bpm","currentDivision","mouseDown","componentDidMount","window","addEventListener","setState","Sequence","_","index","instrument","Object","keys","playNote","setDivision","start","triggerAttack","triggerRelease","setGrid","note","newState","setBpm","newBpm","Transport","value","num","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from \"react\";\n\nimport Tone from \"tone\";\n\nimport A1 from \"../sounds/RideBell_VintageIndie.wav\";\nimport A2 from \"../sounds/Ride_VintageIndie.wav\";\nimport A3 from \"../sounds/HiHatOpen_VintageIndie.wav\";\nimport A4 from \"../sounds/HiHatClosed_VintageIndie.wav\";\nimport A5 from \"../sounds/Snare_VintageIndie.wav\";\nimport A6 from \"../sounds/XStick_VintageIndie.wav\";\nimport A7 from \"../sounds/Tom_VintageIndie.wav\";\nimport A8 from \"../sounds/Kick_VintageIndie.wav\";\n\nexport const GridContext = createContext();\n\nclass GridContextProvider extends Component {\n  state = {\n    drumKit: new Tone.Sampler(\n      {\n        A1,\n        A2,\n        A3,\n        A4,\n        A5,\n        A6,\n        A7,\n        A8\n      },\n      {}\n    ).toMaster(),\n    sequence: {},\n    instruments: {\n      A1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      A2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      A3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],\n      A4: [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0],\n      A5: [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n      A6: [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0],\n      A7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      A8: [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]\n    },\n    instrumentLabels: {\n      A1: \"Ride bell\",\n      A2: \"Ride\",\n      A3: \"Hihat Open\",\n      A4: \"Hihat Closed\",\n      A5: \"Snare\",\n      A6: \"Rim Click\",\n      A7: \"Tom\",\n      A8: \"Kick\"\n    },\n    bpm: 100,\n    currentDivision: -1,\n    mouseDown: false\n  };\n\n  componentDidMount = () => {\n    window.addEventListener(\"mousedown\", () => {\n      this.setState({ mouseDown: true });\n    });\n\n    this.sequence = new Tone.Sequence(\n      (_, index) => {\n        for (let instrument of Object.keys(this.state.instrumentLabels)) {\n          if (this.state.instruments[instrument][index]) {\n            this.playNote(instrument);\n          }\n        }\n        this.setDivision();\n      },\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      \"16n\"\n    ).start(0);\n  };\n\n  playNote = instrument => {\n    this.state.drumKit.triggerAttack(instrument);\n    if (instrument === \"A4\") this.state.drumKit.triggerRelease(\"A3\");\n  };\n\n  setGrid = (note, instrument) => {\n    const newState = this.state;\n    newState.instruments[instrument][note] = !this.state.instruments[\n      instrument\n    ][note];\n    this.setState({ newState });\n    this.playNote(instrument);\n  };\n\n  setBpm = newBpm => {\n    const newState = this.state;\n    newState.bpm = newBpm;\n    this.setState({ newState });\n    Tone.Transport.bpm.value = newBpm;\n  };\n\n  setDivision = (num = this.state.currentDivision) => {\n    this.setState({ currentDivision: (num + 1) % 16 });\n  };\n\n  render() {\n    return (\n      <GridContext.Provider\n        value={{\n          ...this.state,\n          setGrid: this.setGrid,\n          setBpm: this.setBpm,\n          setDivision: this.setDivision,\n          playNote: this.playNote\n        }}\n      >\n        {this.props.children}\n      </GridContext.Provider>\n    );\n  }\n}\n\nexport default GridContextProvider;\n"]},"metadata":{},"sourceType":"module"}