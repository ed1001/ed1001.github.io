{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/Box.jsx\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport GridContainer from \"./GridContainer\";\nimport TransportContainer from \"./TransportContainer\";\nimport BPMContainer from \"./BPMContainer\";\nimport A1 from \"../sounds/HiHatClosed_VintageIndie.wav\";\nimport A2 from \"../sounds/Snare_VintageIndie.wav\";\nimport A3 from \"../sounds/Kick_VintageIndie.wav\";\nimport \"../App\";\nexport default class Box extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setGrid = (instrument, index, set) => {\n      const newState = this.state;\n      newState[instrument][index] = set;\n      this.setState(newState);\n    };\n\n    this.componentDidMount = drumKit => {\n      // this.sequence = new Tone.Sequence(\n      // (time, index) => {\n      //   for(let instrument of this.instruments){\n      //     if (this.state[instrument][index]) {\n      //       this.drumKit.triggerAttack(instrument);\n      //     }\n      //   }\n      // },\n      // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      // \"16n\"\n      // ).start(0);\n      Tone.Transport.schedule(() => {\n        this.drumKit.triggerAttack(\"A1\");\n      }, \"0:0\");\n      Tone.Transport.schedule(() => {\n        this.drumKit.triggerAttack(\"A1\");\n      }, \"0:0.5\");\n      Tone.Transport.schedule(() => {\n        this.drumKit.triggerAttack(\"A1\");\n      }, \"0:1\");\n      Tone.Transport.schedule(() => {\n        this.drumKit.triggerAttack(\"A1\");\n      }, \"0:1.5\");\n      Tone.Transport.schedule(() => {\n        this.drumKit.triggerAttack(\"A1\");\n      }, \"0:2\");\n      Tone.Transport.schedule(() => {\n        this.drumKit.triggerAttack(\"A1\");\n      }, \"0:3\");\n      Tone.Transport.bpm.value = 230;\n      Tone.Transport.loopEnd = \"1m\";\n      Tone.Transport.loop = true;\n    };\n\n    this.state = {\n      bpm: 120\n    };\n    this.drumKit = new Tone.Sampler({\n      A1,\n      A2,\n      A3\n    }, {}).toMaster();\n    this.sequence = {};\n    this.instruments = [\"A1\", \"A2\", \"A3\"];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TransportContainer, {\n      transport: Tone.Transport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(BPMContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(GridContainer, {\n      setGrid: this.setGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/Box.jsx"],"names":["React","Tone","GridContainer","TransportContainer","BPMContainer","A1","A2","A3","Box","Component","constructor","props","setGrid","instrument","index","set","newState","state","setState","componentDidMount","drumKit","Transport","schedule","triggerAttack","bpm","value","loopEnd","loop","Sampler","toMaster","sequence","instruments","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\n\nimport GridContainer from \"./GridContainer\";\nimport TransportContainer from \"./TransportContainer\";\nimport BPMContainer from \"./BPMContainer\";\n\nimport A1 from \"../sounds/HiHatClosed_VintageIndie.wav\";\nimport A2 from \"../sounds/Snare_VintageIndie.wav\";\nimport A3 from \"../sounds/Kick_VintageIndie.wav\";\n\nimport \"../App\";\n\nexport default class Box extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bpm: 120\n    };\n    this.drumKit = new Tone.Sampler(\n      {\n        A1,\n        A2,\n        A3\n      },\n      {}\n    ).toMaster();\n    this.sequence = {};\n    this.instruments = [\"A1\", \"A2\", \"A3\"];\n  }\n\n  setGrid = (instrument, index, set) => {\n    const newState = this.state;\n    newState[instrument][index] = set;\n    this.setState(newState);\n  };\n\n  componentDidMount = drumKit => {\n    // this.sequence = new Tone.Sequence(\n    // (time, index) => {\n    //   for(let instrument of this.instruments){\n    //     if (this.state[instrument][index]) {\n    //       this.drumKit.triggerAttack(instrument);\n    //     }\n    //   }\n    // },\n    // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    // \"16n\"\n    // ).start(0);\n    Tone.Transport.schedule(() => {\n      this.drumKit.triggerAttack(\"A1\");\n    }, \"0:0\");\n    Tone.Transport.schedule(() => {\n      this.drumKit.triggerAttack(\"A1\");\n    }, \"0:0.5\");\n    Tone.Transport.schedule(() => {\n      this.drumKit.triggerAttack(\"A1\");\n    }, \"0:1\");\n    Tone.Transport.schedule(() => {\n      this.drumKit.triggerAttack(\"A1\");\n    }, \"0:1.5\");\n    Tone.Transport.schedule(() => {\n      this.drumKit.triggerAttack(\"A1\");\n    }, \"0:2\");\n    Tone.Transport.schedule(() => {\n      this.drumKit.triggerAttack(\"A1\");\n    }, \"0:3\");\n    Tone.Transport.bpm.value = 230;\n    Tone.Transport.loopEnd = \"1m\";\n    Tone.Transport.loop = true;\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <TransportContainer transport={Tone.Transport} />\n        <BPMContainer />\n        <GridContainer setGrid={this.setGrid} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}