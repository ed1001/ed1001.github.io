{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx\";\nimport React, { useContext } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\nimport Note from \"./Note\";\nimport \"../App\";\n\nfunction handleIt(instrument) {\n  document.getElementById(instrument).classList.add(\"instr-name-active\");\n  document.getElementById(instrument).classList.remove(\"instr-name-active\");\n}\n\nfunction GridLine(props) {\n  const _useContext = useContext(GridContext),\n        instruments = _useContext.instruments,\n        instrumentLabels = _useContext.instrumentLabels,\n        playNote = _useContext.playNote,\n        setGrid = _useContext.setGrid,\n        currentDivision = _useContext.currentDivision;\n\n  let nameClass = \"instr-name\";\n  return React.createElement(\"div\", {\n    className: \"grid-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: nameClass,\n    id: props.instrument,\n    onClick: () => {\n      playNote(props.instrument);\n      handleIt(props.instrument);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, instrumentLabels[props.instrument]), React.createElement(\"div\", {\n    className: \"notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, instruments[props.instrument].map((note, index) => React.createElement(Note, {\n    class: `note ${note && index === currentDivision ? \"note-playing\" : note ? \"note-active\" : \"\"}`,\n    note: index,\n    instrument: props.instrument,\n    setGrid: setGrid,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))));\n}\n\nexport default GridLine;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx"],"names":["React","useContext","GridContext","Note","handleIt","instrument","document","getElementById","classList","add","remove","GridLine","props","instruments","instrumentLabels","playNote","setGrid","currentDivision","nameClass","map","note","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,QAAP;;AAEA,SAASC,QAAT,CAAkBC,UAAlB,EAA8B;AAC5BC,EAAAA,QAAQ,CAACC,cAAT,CAAwBF,UAAxB,EAAoCG,SAApC,CAA8CC,GAA9C,CAAkD,mBAAlD;AACAH,EAAAA,QAAQ,CAACC,cAAT,CAAwBF,UAAxB,EAAoCG,SAApC,CAA8CE,MAA9C,CAAqD,mBAArD;AACD;;AAED,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,sBAOnBX,UAAU,CAACC,WAAD,CAPS;AAAA,QAErBW,WAFqB,eAErBA,WAFqB;AAAA,QAGrBC,gBAHqB,eAGrBA,gBAHqB;AAAA,QAIrBC,QAJqB,eAIrBA,QAJqB;AAAA,QAKrBC,OALqB,eAKrBA,OALqB;AAAA,QAMrBC,eANqB,eAMrBA,eANqB;;AAQvB,MAAIC,SAAS,GAAG,YAAhB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEA,SADb;AAEE,IAAA,EAAE,EAAEN,KAAK,CAACP,UAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbU,MAAAA,QAAQ,CAACH,KAAK,CAACP,UAAP,CAAR;AACAD,MAAAA,QAAQ,CAACQ,KAAK,CAACP,UAAP,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGS,gBAAgB,CAACF,KAAK,CAACP,UAAP,CARnB,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,WAAW,CAACD,KAAK,CAACP,UAAP,CAAX,CAA8Bc,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KACjC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAG,QACND,IAAI,IAAIC,KAAK,KAAKJ,eAAlB,GACI,cADJ,GAEIG,IAAI,GACJ,aADI,GAEJ,EACL,EAPH;AAQE,IAAA,IAAI,EAAEC,KARR;AASE,IAAA,UAAU,EAAET,KAAK,CAACP,UATpB;AAUE,IAAA,OAAO,EAAEW,OAVX;AAWE,IAAA,GAAG,EAAEK,KAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAXF,CADF;AA+BD;;AAED,eAAeV,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\n\nimport Note from \"./Note\";\n\nimport \"../App\";\n\nfunction handleIt(instrument) {\n  document.getElementById(instrument).classList.add(\"instr-name-active\");\n  document.getElementById(instrument).classList.remove(\"instr-name-active\");\n}\n\nfunction GridLine(props) {\n  const {\n    instruments,\n    instrumentLabels,\n    playNote,\n    setGrid,\n    currentDivision\n  } = useContext(GridContext);\n  let nameClass = \"instr-name\";\n  return (\n    <div className=\"grid-line\">\n      <div\n        className={nameClass}\n        id={props.instrument}\n        onClick={() => {\n          playNote(props.instrument);\n          handleIt(props.instrument);\n        }}\n      >\n        {instrumentLabels[props.instrument]}\n      </div>\n      <div className=\"notes\">\n        {instruments[props.instrument].map((note, index) => (\n          <Note\n            class={`note ${\n              note && index === currentDivision\n                ? \"note-playing\"\n                : note\n                ? \"note-active\"\n                : \"\"\n            }`}\n            note={index}\n            instrument={props.instrument}\n            setGrid={setGrid}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GridLine;\n"]},"metadata":{},"sourceType":"module"}