{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx\";\nimport React, { useContext } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\nimport Note from \"./Note\";\nimport \"../App\";\n\nfunction GridLine(props) {\n  const _useContext = useContext(GridContext),\n        instruments = _useContext.instruments,\n        instrumentLabels = _useContext.instrumentLabels,\n        setGrid = _useContext.setGrid,\n        currentDivision = _useContext.currentDivision;\n\n  return React.createElement(\"div\", {\n    className: \"grid-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"instr-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, instrumentLabels[props.instrument]), React.createElement(\"div\", {\n    className: \"notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, instrumentLabels[props.instrument].map((note, index) => React.createElement(Note, {\n    class: `note ${note && index === currentDivision ? \"note-playing\" : note ? \"note-active\" : \"\"}`,\n    note: index,\n    instrument: props.instrument,\n    setGrid: setGrid,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n}\n\nexport default GridLine;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx"],"names":["React","useContext","GridContext","Note","GridLine","props","instruments","instrumentLabels","setGrid","currentDivision","instrument","map","note","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,QAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,sBAMnBJ,UAAU,CAACC,WAAD,CANS;AAAA,QAErBI,WAFqB,eAErBA,WAFqB;AAAA,QAGrBC,gBAHqB,eAGrBA,gBAHqB;AAAA,QAIrBC,OAJqB,eAIrBA,OAJqB;AAAA,QAKrBC,eALqB,eAKrBA,eALqB;;AAOvB,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,gBAAgB,CAACF,KAAK,CAACK,UAAP,CAA7C,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,gBAAgB,CAACF,KAAK,CAACK,UAAP,CAAhB,CAAmCC,GAAnC,CAAuC,CAACC,IAAD,EAAOC,KAAP,KACtC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAG,QACND,IAAI,IAAIC,KAAK,KAAKJ,eAAlB,GACI,cADJ,GAEIG,IAAI,GACJ,aADI,GAEJ,EACL,EAPH;AAQE,IAAA,IAAI,EAAEC,KARR;AASE,IAAA,UAAU,EAAER,KAAK,CAACK,UATpB;AAUE,IAAA,OAAO,EAAEF,OAVX;AAWE,IAAA,GAAG,EAAEK,KAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAsBD;;AAED,eAAeT,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\n\nimport Note from \"./Note\";\n\nimport \"../App\";\n\nfunction GridLine(props) {\n  const {\n    instruments,\n    instrumentLabels,\n    setGrid,\n    currentDivision\n  } = useContext(GridContext);\n  return (\n    <div className=\"grid-line\">\n      <div className=\"instr-name\">{instrumentLabels[props.instrument]}</div>\n      <div className=\"notes\">\n        {instrumentLabels[props.instrument].map((note, index) => (\n          <Note\n            class={`note ${\n              note && index === currentDivision\n                ? \"note-playing\"\n                : note\n                ? \"note-active\"\n                : \"\"\n            }`}\n            note={index}\n            instrument={props.instrument}\n            setGrid={setGrid}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GridLine;\n"]},"metadata":{},"sourceType":"module"}