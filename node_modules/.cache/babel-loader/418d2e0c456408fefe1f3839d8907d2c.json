{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx\";\nimport React, { useContext } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\nimport Note from \"./Note\";\nimport \"../App\";\n\nfunction handleIt() {\n  document.querySelector(\".instr-name\").classList.add(\"\");\n}\n\nfunction GridLine(props) {\n  const _useContext = useContext(GridContext),\n        instruments = _useContext.instruments,\n        instrumentLabels = _useContext.instrumentLabels,\n        playNote = _useContext.playNote,\n        setGrid = _useContext.setGrid,\n        currentDivision = _useContext.currentDivision;\n\n  let nameClass = \"instr-name\";\n  return React.createElement(\"div\", {\n    className: \"grid-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: nameClass,\n    onClick: () => {\n      playNote(props.instrument);\n      handleIt();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, instrumentLabels[props.instrument]), React.createElement(\"div\", {\n    className: \"notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, instruments[props.instrument].map((note, index) => React.createElement(Note, {\n    class: `note ${note && index === currentDivision ? \"note-playing\" : note ? \"note-active\" : \"\"}`,\n    note: index,\n    instrument: props.instrument,\n    setGrid: setGrid,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n}\n\nexport default GridLine;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/GridLine.jsx"],"names":["React","useContext","GridContext","Note","handleIt","document","querySelector","classList","add","GridLine","props","instruments","instrumentLabels","playNote","setGrid","currentDivision","nameClass","instrument","map","note","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,QAAP;;AAEA,SAASC,QAAT,GAAoB;AAClBC,EAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAgDC,GAAhD,CAAoD,EAApD;AACD;;AAED,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,sBAOnBT,UAAU,CAACC,WAAD,CAPS;AAAA,QAErBS,WAFqB,eAErBA,WAFqB;AAAA,QAGrBC,gBAHqB,eAGrBA,gBAHqB;AAAA,QAIrBC,QAJqB,eAIrBA,QAJqB;AAAA,QAKrBC,OALqB,eAKrBA,OALqB;AAAA,QAMrBC,eANqB,eAMrBA,eANqB;;AAQvB,MAAIC,SAAS,GAAG,YAAhB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEA,SADb;AAEE,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,QAAQ,CAACH,KAAK,CAACO,UAAP,CAAR;AACAb,MAAAA,QAAQ;AACT,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGQ,gBAAgB,CAACF,KAAK,CAACO,UAAP,CAPnB,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,CAACD,KAAK,CAACO,UAAP,CAAX,CAA8BC,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KACjC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAG,QACND,IAAI,IAAIC,KAAK,KAAKL,eAAlB,GACI,cADJ,GAEII,IAAI,GACJ,aADI,GAEJ,EACL,EAPH;AAQE,IAAA,IAAI,EAAEC,KARR;AASE,IAAA,UAAU,EAAEV,KAAK,CAACO,UATpB;AAUE,IAAA,OAAO,EAAEH,OAVX;AAWE,IAAA,GAAG,EAAEM,KAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAVF,CADF;AA8BD;;AAED,eAAeX,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\n\nimport Note from \"./Note\";\n\nimport \"../App\";\n\nfunction handleIt() {\n  document.querySelector(\".instr-name\").classList.add(\"\");\n}\n\nfunction GridLine(props) {\n  const {\n    instruments,\n    instrumentLabels,\n    playNote,\n    setGrid,\n    currentDivision\n  } = useContext(GridContext);\n  let nameClass = \"instr-name\";\n  return (\n    <div className=\"grid-line\">\n      <div\n        className={nameClass}\n        onClick={() => {\n          playNote(props.instrument);\n          handleIt();\n        }}\n      >\n        {instrumentLabels[props.instrument]}\n      </div>\n      <div className=\"notes\">\n        {instruments[props.instrument].map((note, index) => (\n          <Note\n            class={`note ${\n              note && index === currentDivision\n                ? \"note-playing\"\n                : note\n                ? \"note-active\"\n                : \"\"\n            }`}\n            note={index}\n            instrument={props.instrument}\n            setGrid={setGrid}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GridLine;\n"]},"metadata":{},"sourceType":"module"}