{"ast":null,"code":"var _jsxFileName = \"/Users/Ed/code/ed1001/react-drums/src/components/BPMContainer.jsx\";\nimport React from \"react\";\nimport { GridContext } from \"../contexts/GridContext\";\nimport \"../App\";\nexport default class BPMContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.increaseBpm = (interval, increment, start) => {\n      this.context.setBpm(this.context.bpm + increment);\n      window.addEventListener(\"mouseup\", () => {\n        start = false;\n      });\n      console.log(start);\n      if (interval > 100) interval -= 10;\n\n      if (start) {\n        setTimeout(() => {\n          this.increaseBpm(interval, increment, true);\n        }, interval);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bpm-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"bpm-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"BPM\"), React.createElement(\"div\", {\n      id: \"bpm-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.context.bpm)), React.createElement(\"div\", {\n      id: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"arrow\",\n      onMouseDown: () => this.increaseBpm(200, 1, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"\\u25B2\"), React.createElement(\"p\", {\n      className: \"arrow\",\n      onClick: () => this.context.setBpm(this.context.bpm - 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\u25BC\")));\n  }\n\n}\nBPMContainer.contextType = GridContext;","map":{"version":3,"sources":["/Users/Ed/code/ed1001/react-drums/src/components/BPMContainer.jsx"],"names":["React","GridContext","BPMContainer","Component","increaseBpm","interval","increment","start","context","setBpm","bpm","window","addEventListener","console","log","setTimeout","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,QAAP;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAGxDC,WAHwD,GAG1C,CAACC,QAAD,EAAWC,SAAX,EAAsBC,KAAtB,KAAgC;AAC5C,WAAKC,OAAL,CAAaC,MAAb,CAAoB,KAAKD,OAAL,CAAaE,GAAb,GAAmBJ,SAAvC;AACAK,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,MAAM;AACvCL,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,UAAIF,QAAQ,GAAG,GAAf,EAAoBA,QAAQ,IAAI,EAAZ;;AACpB,UAAIE,KAAJ,EAAW;AACTQ,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKX,WAAL,CAAiBC,QAAjB,EAA2BC,SAA3B,EAAsC,IAAtC;AACD,SAFS,EAEPD,QAFO,CAAV;AAGD;AACF,KAfuD;AAAA;;AAiBxDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,OAAL,CAAaE,GAAjB,CADF,CAFF,EAKE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,WAAW,EAAE,MAAM,KAAKN,WAAL,CAAiB,GAAjB,EAAsB,CAAtB,EAAyB,IAAzB,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKI,OAAL,CAAaC,MAAb,CAAoB,KAAKD,OAAL,CAAaE,GAAb,GAAmB,CAAvC,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CALF,CADF;AAsBD;;AAxCuD;AAArCR,Y,CACZe,W,GAAchB,W","sourcesContent":["import React from \"react\";\n\nimport { GridContext } from \"../contexts/GridContext\";\nimport \"../App\";\n\nexport default class BPMContainer extends React.Component {\n  static contextType = GridContext;\n\n  increaseBpm = (interval, increment, start) => {\n    this.context.setBpm(this.context.bpm + increment);\n    window.addEventListener(\"mouseup\", () => {\n      start = false;\n    });\n    console.log(start);\n    if (interval > 100) interval -= 10;\n    if (start) {\n      setTimeout(() => {\n        this.increaseBpm(interval, increment, true);\n      }, interval);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bpm-container\">\n        <p id=\"bpm-desc\">BPM</p>\n        <div id=\"bpm-text\">\n          <p>{this.context.bpm}</p>\n        </div>\n        <div id=\"arrows\">\n          <p\n            className=\"arrow\"\n            onMouseDown={() => this.increaseBpm(200, 1, true)}\n          >\n            ▲\n          </p>\n          <p\n            className=\"arrow\"\n            onClick={() => this.context.setBpm(this.context.bpm - 2)}\n          >\n            ▼\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}